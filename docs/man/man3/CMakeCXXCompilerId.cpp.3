.TH "/home/jbs/catkin_ws/src/traj_gen_vis_developing/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp" 3 "Wed Apr 17 2019" "Version 1.0.0" "auto_chaser" \" -*- nroff -*-
.ad l
.nh
.SH NAME
/home/jbs/catkin_ws/src/traj_gen_vis_developing/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp \- 
.SH SYNOPSIS
.br
.PP
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBCOMPILER_ID\fP   ''"
.br
.ti -1c
.RI "#define \fBSTRINGIFY_HELPER\fP(X)   #X"
.br
.ti -1c
.RI "#define \fBSTRINGIFY\fP(X)   \fBSTRINGIFY_HELPER\fP(X)"
.br
.ti -1c
.RI "#define \fBPLATFORM_ID\fP   ''"
.br
.ti -1c
.RI "#define \fBARCHITECTURE_ID\fP   ''"
.br
.ti -1c
.RI "#define \fBDEC\fP(n)"
.br
.ti -1c
.RI "#define \fBHEX\fP(n)"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "int \fBmain\fP (int argc, char *argv[])"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "char const * \fBinfo_compiler\fP = 'INFO' ':' 'compiler[' COMPILER_ID ']'"
.br
.ti -1c
.RI "char const * \fBinfo_platform\fP = 'INFO' ':' 'platform[' PLATFORM_ID ']'"
.br
.ti -1c
.RI "char const * \fBinfo_arch\fP = 'INFO' ':' 'arch[' ARCHITECTURE_ID ']'"
.br
.ti -1c
.RI "const char * \fBinfo_language_dialect_default\fP"
.br
.in -1c
.SH "Macro Definition Documentation"
.PP 
.SS "#define ARCHITECTURE_ID   ''"

.SS "#define COMPILER_ID   ''"

.SS "#define DEC(n)"
\fBValue:\fP
.PP
.nf
('0' + (((n) / 10000000)%10)), \
  ('0' + (((n) / 1000000)%10)),  \
  ('0' + (((n) / 100000)%10)),   \
  ('0' + (((n) / 10000)%10)),    \
  ('0' + (((n) / 1000)%10)),     \
  ('0' + (((n) / 100)%10)),      \
  ('0' + (((n) / 10)%10)),       \
  ('0' +  ((n) % 10))
.fi
.SS "#define HEX(n)"
\fBValue:\fP
.PP
.nf
('0' + ((n)>>28 & 0xF)), \
  ('0' + ((n)>>24 & 0xF)), \
  ('0' + ((n)>>20 & 0xF)), \
  ('0' + ((n)>>16 & 0xF)), \
  ('0' + ((n)>>12 & 0xF)), \
  ('0' + ((n)>>8  & 0xF)), \
  ('0' + ((n)>>4  & 0xF)), \
  ('0' + ((n)     & 0xF))
.fi
.SS "#define PLATFORM_ID   ''"

.SS "#define STRINGIFY(X)   \fBSTRINGIFY_HELPER\fP(X)"

.SS "#define STRINGIFY_HELPER(X)   #X"

.SH "Function Documentation"
.PP 
.SS "int main (int argc, char * argv[])"

.PP
.nf
514 {
515   int require = 0;
516   require += info_compiler[argc];
517   require += info_platform[argc];
518 #ifdef COMPILER_VERSION_MAJOR
519   require += info_version[argc];
520 #endif
521 #ifdef SIMULATE_ID
522   require += info_simulate[argc];
523 #endif
524 #ifdef SIMULATE_VERSION_MAJOR
525   require += info_simulate_version[argc];
526 #endif
527 #if defined(__CRAYXE) || defined(__CRAYXC)
528   require += info_cray[argc];
529 #endif
530   require += info_language_dialect_default[argc];
531   (void)argv;
532   return require;
533 }
.fi
.SH "Variable Documentation"
.PP 
.SS "char const* info_arch = 'INFO' ':' 'arch[' ARCHITECTURE_ID ']'"

.SS "char const* info_compiler = 'INFO' ':' 'compiler[' COMPILER_ID ']'"

.SS "const char* info_language_dialect_default"
\fBInitial value:\fP
.PP
.nf
= "INFO" ":" "dialect_default["





  "98"

"]"
.fi
.SS "char const* info_platform = 'INFO' ':' 'platform[' PLATFORM_ID ']'"

.SH "Author"
.PP 
Generated automatically by Doxygen for auto_chaser from the source code\&.
