.TH "Chaser" 3 "Tue Apr 9 2019" "Version 1.0.0" "auto_chaser" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Chaser \- 
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <Chaser\&.h>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBChaser\fP ()"
.br
.ti -1c
.RI "void \fBinit\fP (ros::NodeHandle nh)"
.br
.ti -1c
.RI "bool \fBchase_update\fP (\fBGridField\fP *global_edf, vector< Point > target_pnts, Point chaser_x0, Twist chaser_v0, Twist chaser_a0, TimeSeries knots)"
.br
.ti -1c
.RI "void \fBsession\fP (double t)"
.br
.ti -1c
.RI "Point \fBeval_point\fP (double t_eval)"
.br
.ti -1c
.RI "Twist \fBeval_velocity\fP (double t_eval)"
.br
.ti -1c
.RI "Twist \fBeval_acceleration\fP (double t_eval)"
.br
.ti -1c
.RI "void \fBpublish_control\fP (double t_eval)"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "bool \fBis_complete_chasing_path\fP"
.br
.in -1c
.SS "Private Member Functions"

.in +1c
.ti -1c
.RI "void \fBpreplan\fP ()"
.br
.ti -1c
.RI "void \fBpath_complete\fP ()"
.br
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "\fBPreplanner\fP \fBpreplanner\fP"
.br
.ti -1c
.RI "\fBSmoothPlanner\fP \fBsmooth_planner\fP"
.br
.ti -1c
.RI "ros::Publisher \fBpub_control_mav\fP"
.br
.ti -1c
.RI "geometry_msgs::PoseStamped \fBpose_control_mav\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
.SH "Constructor & Destructor Documentation"
.PP 
.SS "Chaser::Chaser ()"

.PP
.nf
3 :is_complete_chasing_path(false){}
.fi
.SH "Member Function Documentation"
.PP 
.SS "bool Chaser::chase_update (\fBGridField\fP * global_edf, vector< Point > target_pnts, Point chaser_x0, Twist chaser_v0, Twist chaser_a0, TimeSeries knots)"

.PP
.nf
12                                                                                                                                              {
13     
14     bool result = false;
15     
16 
17 
18     // phase 1 pre planning 
19     preplanner\&.preplan(global_edf_ptr,target_pnts,chaser_x0);
20     ROS_INFO("[Chaser] preplanning completed\&.");
21 
22     nav_msgs::Path waypoints = preplanner\&.get_preplanned_waypoints();
23 
24     if(waypoints\&.poses\&.size()){
25         // phase 2 smooth planning     
26         smooth_planner\&.traj_gen(knots,waypoints,chaser_v0,chaser_a0);
27         if (smooth_planner\&.planner\&.is_spline_valid())
28             {ROS_INFO("[Chaser] smooth path completed\&."); is_complete_chasing_path = true; return true;}
29         else 
30             ROS_WARN("[Chaser] smooth path incompleted\&.");
31     }else
32         ROS_WARN("[Chaser] preplanning failed");
33 
34     return false;
35 }
.fi
.SS "Twist Chaser::eval_acceleration (double t_eval)"

.PP
.nf
56                                             {
57     return smooth_planner\&.planner\&.accel_eval_spline(t_eval);        
58 }
.fi
.SS "Point Chaser::eval_point (double t_eval)"

.PP
.nf
47                                      {    
48     return smooth_planner\&.planner\&.point_eval_spline(t_eval);        
49 }
.fi
.SS "Twist Chaser::eval_velocity (double t_eval)"

.PP
.nf
52                                         {
53     return smooth_planner\&.planner\&.vel_eval_spline(t_eval);        
54 }
.fi
.SS "void Chaser::init (ros::NodeHandle nh)"

.PP
.nf
5                                  {
6 
7     preplanner\&.init(nh);
8     smooth_planner\&.init(nh);
9     pub_control_mav = nh\&.advertise<PoseStamped>("mav_control_pose",1);
10 }
.fi
.SS "void Chaser::path_complete ()\fC [private]\fP"

.SS "void Chaser::preplan ()\fC [private]\fP"

.SS "void Chaser::publish_control (double t_eval)"

.PP
.nf
61                                          {
62     pose_control_mav\&.header\&.frame_id = smooth_planner\&.world_frame_id;
63     pose_control_mav\&.pose\&.position = smooth_planner\&.planner\&.point_eval_spline(t_eval); 
64     pub_control_mav\&.publish(pose_control_mav);
65 }
.fi
.SS "void Chaser::session (double t)"

.PP
.nf
37                             {
38     preplanner\&.publish(); // markers     
39     smooth_planner\&.publish();  // markers 
40     if (is_complete_chasing_path){
41         publish_control(t);
42     }
43 
44 }
.fi
.SH "Member Data Documentation"
.PP 
.SS "bool Chaser::is_complete_chasing_path"

.SS "geometry_msgs::PoseStamped Chaser::pose_control_mav\fC [private]\fP"

.SS "\fBPreplanner\fP Chaser::preplanner\fC [private]\fP"

.SS "ros::Publisher Chaser::pub_control_mav\fC [private]\fP"

.SS "\fBSmoothPlanner\fP Chaser::smooth_planner\fC [private]\fP"


.SH "Author"
.PP 
Generated automatically by Doxygen for auto_chaser from the source code\&.
